#ifndef __JOG3K_H__
#define __JOG3K_H__

// FW Version
#define FW_VERSION "V0.1A"

// Buttons
#define PIN_DPAD_UP 6
#define PIN_DPAD_DOWN 7
#define PIN_DPAD_LEFT 8
#define PIN_DPAD_RIGHT 9
#define PIN_BUTTON_FEEDOVR_UP 4
#define PIN_BUTTON_HALT 5
#define PIN_BUTTON_LOWER 10
#define PIN_BUTTON_RAISE 11
#define PIN_BUTTON_FEEDOVR_DN 12
#define PIN_BUTTON_FEEDOVR_RST 13
#define PIN_BUTTON_ALT 14
#define PIN_BUTTON_SPINOVR_UP 15
#define PIN_BUTTON_SPINOVR_DN 16
#define PIN_BUTTON_FLOOD 17
#define PIN_BUTTON_MIST 18
#define PIN_BUTTON_FEED_HOLD 19
#define PIN_BUTTON_CYCLE_START 20
#define PIN_BUTTON_SPINDLE 21
#define PIN_BUTTON_SPINOVR_RST 26
#define PIN_BUTTON_HOME 27

// Output GPIOs
#define PIN_OUT_KPSTR 28

// Display
#define PIN_DISP_SDA 2
#define PIN_DISP_SCL 3
#define PIN_DISP_RESET -1
#define OLED_WIDTH 128
#define OLED_HEIGHT 64
#define OLED_CLOCK 3800000L // this clock freq may break with different OLEDs. Reduce to 1000000L if OLED gets weird.

// Neopixels
#define PIN_NEOPIXEL 22
#define NUMPIXELS 10
#define DELAYVAL 200  // Time (in milliseconds) to pause between pixels
#define CYCLEDELAY 12 // Time to wait after a cycle
#define NEO_BRIGHTNESS 128

// Neopixel LED locations
#define RAISELED 0
#define JOGLED 1
#define SPINOVERLED 2
#define FEEDOVERLED 3
#define HALTLED 4
#define HOLDLED 5
#define RUNLED 6
#define SPINDLELED 7
#define COOLLED 8
#define HOMELED 9

// states used by machine_state in Machine_status_packet
#define STATE_NOT_CONNECTED 0 // Not receiving USB connected flag. Display 'Not Connected' message
#define STATE_ALARM 1         //!< In alarm state. Locks out all g-code processes. Allows settings access.
#define STATE_CYCLE 2         //!< Cycle is running or motions are being executed.
#define STATE_HOLD 3          //!< Active feed hold
#define STATE_TOOL_CHANGE 4   //!< Manual tool change, similar to #STATE_HOLD - but stops spindle and allows jogging.
#define STATE_IDLE 5          //!< Must be zero. No flags.
#define STATE_HOMING 6        //!< Performing homing cycle
#define STATE_JOG 7           //!< Jogging mode.
#define STATE_NOT_HOMED 8     // Machine not homed, most LEDs off.
#define STATE_MACHINE_OFF 9   // Machine power off - likely LCNC only?

// Flash storage
#define FLASH_TARGET_OFFSET (1024 * 1024)

// HID Report IDs
#define REPORT_ID_BUTTONS 1
#define REPORT_ID_ENCODERS 2

struct button_report
{
    uint32_t buttons;
    uint8_t joy0;
    uint8_t joy1;
    uint8_t joy2;
    uint8_t joy3;
} button_report;

struct
{
    int x_encoder_counts;
    int y_encoder_counts;
    int z_encoder_counts;
    int feed_override;
    int spindle_override;
} encoder_report;

struct config_data
{
    uint8_t screen_flip;
    //   int jog_speed_x;
    //   int jog_speed_y;
    //   int jog_speed_z;
    uint8_t pad[255]; // pad structure to one page of memory; we need to write in increments of 1 page (256 bytes).
} config_data;

static struct
{
    uint8_t mem[256];
    uint8_t mem_address;
    bool mem_address_written;
} context;

enum ScreenMode
{
    DEFAULT = 0,
    JOGGING,
    RUN,
    JOG_MODIFY
};

typedef enum coord_system_id_t
{
    CoordinateSystem_G54 = 0, //!< 0 - G54 (G12)
    CoordinateSystem_G55,     //!< 1 - G55 (G12)
    CoordinateSystem_G56,     //!< 2 - G56 (G12)
    CoordinateSystem_G57,     //!< 3 - G57 (G12)
    CoordinateSystem_G58,     //!< 4 - G58 (G12)
    CoordinateSystem_G59,     //!< 5 - G59 (G12)
#if COMPATIBILITY_LEVEL <= 1
    CoordinateSystem_G59_1, //!< 6 - G59.1 (G12) - availability depending on #COMPATIBILITY_LEVEL <= 1
    CoordinateSystem_G59_2, //!< 7 - G59.2 (G12) - availability depending on #COMPATIBILITY_LEVEL <= 1
    CoordinateSystem_G59_3, //!< 8 - G59.3 (G12) - availability depending on #COMPATIBILITY_LEVEL <= 1
#endif
    N_WorkCoordinateSystems,                        //!< 9 when #COMPATIBILITY_LEVEL <= 1, 6 otherwise
    CoordinateSystem_G28 = N_WorkCoordinateSystems, //!< 9 - G28 (G0) when #COMPATIBILITY_LEVEL <= 1, 6 otherwise
    CoordinateSystem_G30,                           //!< 10 - G30 (G0) when #COMPATIBILITY_LEVEL <= 1, 7 otherwise
    CoordinateSystem_G92,                           //!< 11 - G92 (G0) when #COMPATIBILITY_LEVEL <= 1, 8 otherwise
    N_CoordinateSystems                             //!< 12 when #COMPATIBILITY_LEVEL <= 1, 9 otherwise
} coord_system_id_t;

typedef union coolant_state_t
{
    uint8_t value; //!< Bitmask value
    uint8_t mask;  //!< Synonym for bitmask value
    struct
    {
        uint8_t flood : 1,       //!< Flood coolant.
            mist : 1,            //!< Mist coolant, optional.
            shower : 1,          //!< Shower coolant, currently unused.
            through_spindle : 1, //!< Through spindle coolant, currently unused.
            unused : 4;
    };
} coolant_state_t;
/*
//#pragma pack(push, 1) //disable alignment padding
typedef struct Machine_status_packet
{
    uint8_t address;               // offset 0, size 1
    uint8_t machine_state;         // offset 1, size 1
    uint8_t alarm;                 // offset 2, size 1
    uint8_t home_state;            // offset 3, size 1
    uint8_t feed_override;         // offset 4, size 1
    uint8_t spindle_override;      // offset 5, size 1
    uint8_t spindle_stop;          // offset 6, size 1
    int spindle_rpm;               // offset 7, size 4
    float feed_rate;               // offset 11, size 4
    coolant_state_t coolant_state; // offset 15, size 1
    uint8_t jog_mode;              // includes both modifier as well as mode //offset 16, size 1
    float jog_stepsize;            // offset 17, size 4
    coord_system_id_t current_wcs; // active WCS or MCS modal state //offset 21, size 1
    float x_coordinate;            // offset 22, size 4
    float y_coordinate;            // offset 26, size 4
    float z_coordinate;            // offset 30, size 4
    float a_coordinate;            // offset 34, size 4
} Machine_status_packet;           // 44 bytes when aligned by compiler - 38 bytes of data.
*/
typedef struct
{
    uint8_t address;               // offset 0, size 1
    uint8_t machine_state;         // offset 1, size 1
    uint8_t alarm;                 // offset 2, size 1
    uint8_t home_state;            // offset 3, size 1
    uint8_t feed_override;         // offset 4, size 1
    uint8_t spindle_override;      // offset 5, size 1
    uint8_t spindle_stop;          // offset 6, size 1
    coolant_state_t coolant_state; // offset 7, size 1
    int spindle_rpm;               // offset 8, size 4
    float feed_rate;               // offset 12, size 4
    float x_coordinate;            // offset 16, size 4
    float y_coordinate;            // offset 20, size 4
    float z_coordinate;            // offset 24, size 4
    float a_coordinate;            // offset 28, size 4
    float jog_stepsize;            // offset 32, size 4
    uint8_t jog_mode;              // includes both modifier as well as mode //offset 36, size 1
    coord_system_id_t current_wcs; // active WCS or MCS modal state //offset 37, size 1
} Jogger_status_packet;            // 40 bytes when aligned by compiler - 38 bytes of data.

/*
enum DisplayState
{
    DISP_DEFAULT = 0,
    DISP_NOT_CONNECTED,
    DISP_WAIT,
    DISP_FIRST_RUN,
    DISP_RUN,
    DISP_SHIFT
};  */
// TODO - replace this
enum JogSpeed
{

    JOG_DISABLED = 0,
    JOG_STEP_001 = 1,
    JOG_STEP_01 = 2,
    JOG_STEP_1 = 3,
    JOG_STEP_10 = 4,
    JOG_STEP_100 = 5,
    JOG_SLOW = 6,
    JOG_MEDIUM = 7,
    JOG_FAST = 8
};

enum Jogmode
{
    FAST = 0,
    SLOW = 1,
    STEP = 2
};

enum Jogmodify
{
    JogModify_1 = 0,
    JogModify_01 = 1,
    JogModify_001 = 2
};

int main();
void core1_main();
void settings_ui();
void hid_task();
void cdc_task();
void button_task();
void ui_task();
void oled_task();
void comm_watchdog();
void reset_comm_watchdog();
uint8_t adjust(uint8_t);
void oled_pad_pos(int, double);
void oled_pad_tool(int, int);
void read_flash_config();
void write_flash_config();
void draw_main_screen();
void display_jog_mode(char *);
void display_overrides(char *);
static void send_hid_report(uint8_t report_id);
Jogger_status_packet unpackStatus(const uint8_t *, int *);

uint8_t expatria_logo[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0xc0, 0xc0, 0x40, 0x40,
    0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x40, 0x40, 0xc0, 0xc0, 0xc0, 0x80,
    0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3c, 0xfe, 0xfc, 0xf0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x60,
    0x30, 0x18, 0x08, 0x0c, 0x06, 0x06, 0x83, 0x81, 0xc1, 0xc1, 0x40, 0x60, 0x60, 0x20, 0x20, 0x20,
    0x20, 0x20, 0x30, 0x30, 0x30, 0x30, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x60, 0x60, 0x40,
    0x40, 0xc0, 0xc1, 0x81, 0x81, 0x03, 0x03, 0x02, 0x06, 0x06, 0x04, 0x0c, 0x0c, 0x08, 0x18, 0x10,
    0x30, 0x30, 0x60, 0x40, 0xc0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x03, 0x1f, 0xff, 0xff, 0xfe, 0xf8, 0xf8, 0x9c, 0x06, 0x83, 0xc1, 0x60, 0x30,
    0x18, 0x0c, 0x06, 0x06, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x03, 0x02, 0x06, 0x06, 0x04, 0x0c, 0x08, 0x18, 0x10,
    0x30, 0x20, 0x60, 0x40, 0xc0, 0x80, 0x81, 0x01, 0x03, 0x02, 0x06, 0x0c, 0x0c, 0x18, 0x30, 0x20,
    0x60, 0xc0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0xc0, 0xc0, 0xc0, 0xc0, 0xe0, 0xe0, 0xe0, 0x60, 0x60, 0x20,
    0x00, 0x00, 0x00, 0xe0, 0x78, 0x9e, 0xc7, 0x7f, 0x7f, 0xff, 0xff, 0xff, 0xf9, 0xe0, 0xc0, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0x02, 0x06, 0x0c, 0x0c, 0x18, 0x10, 0x30,
    0x60, 0x60, 0xc0, 0x81, 0x83, 0x06, 0x04, 0x0c, 0x18, 0x30, 0x60, 0x60, 0xc0, 0xe0, 0xe0, 0xe0,
    0xe0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf8, 0xf8, 0xf8, 0xfc, 0x7c, 0x7c, 0x7e, 0x3e, 0x3e, 0x3e, 0x1f,
    0x1f, 0x1f, 0x0f, 0x0f, 0x07, 0x07, 0x07, 0x03, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xf0, 0xfc, 0x77, 0x1d, 0x06, 0x03, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x1f, 0x3f, 0x7f, 0xff,
    0xff, 0xfe, 0xfc, 0xf8, 0xf0, 0xf0, 0xe0, 0xe0, 0xc0, 0xc0, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xe0, 0xe0, 0xe0,
    0xe0, 0xe0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf8, 0xf8, 0xf8, 0xf8, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfe,
    0xfe, 0x7e, 0x7f, 0x7f, 0x3f, 0x3f, 0x3e, 0x1e, 0x1c, 0x18, 0x18, 0x30, 0x60, 0x61, 0xc3, 0x87,
    0x8f, 0x0f, 0x1b, 0x31, 0x61, 0xc1, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x03, 0x03, 0x07, 0x07, 0x0f, 0x1f, 0x1f, 0x1f, 0x3f, 0x3f, 0x3f, 0x3f, 0x7f, 0x7f, 0x7f,
    0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,
    0x7f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x0f, 0x0f, 0x0f,
    0x0f, 0x07, 0x07, 0x07, 0x07, 0x03, 0x03, 0x03, 0x03, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x01, 0x03, 0x06, 0x04, 0x0c, 0x18, 0x31, 0x33, 0x66, 0xcc, 0x98, 0xb0, 0x60, 0x40, 0xc0, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x06, 0x04, 0x0d,
    0x1b, 0x36, 0x3c, 0x78, 0xf0, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

#endif